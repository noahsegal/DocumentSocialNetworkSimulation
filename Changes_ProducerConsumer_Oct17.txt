Consumer Changes:

  Implemented searchDocs(List<Document> allDocuments, int k)
    Searches all documents. Returns list of "k" Documents
    *This must be called in the simulation
    *Facilitates calculating Producer payoff

  Implemented calcConsumerPayoff(List<Document> documents)
    Sets Consumer payoff based on list returned from a prior search
    payoff++ for documents with same tag that haven't been liked

  Implemented likeDocsAndProducers(List<Document> documents)
    Likes docs with matching tags. Follows these doc's Producer

  Changed takeTurn(List<Document> documents)
    Calculates payoff --> calcConsumerPayoff()
    Likes docs & follows Producers --> LikeDocsAndProducers()
    returns null (no newly created document)


Producer Changes:

  Implemented calcProducerPayoff(List<Document> documents)
    Sets Producer payoff based on list returned from a prior search
    payoff++ for searched documents with same tag (interest)
    *Should be called after every search (Consumer/Producer)
    *Should be called from Simulation over a list of all Producers

  Changed takeTurn(List<Document> documents)
    Creates a new document
    Adds new document to the list passed in from a prior search
    Likes docs & follows Producers --> LikeDocsAndProducers()
    returns newly created document (for master list)
